services:
  task-scheduler-api:
    build:
      context: .
      dockerfile: ./apps/task-scheduler-api/Dockerfile
      target: development
    command: npm run start:dev task-scheduler-api
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - email
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3000:3000
    restart: always

  email:
    build:
      context: .
      dockerfile: ./apps/email/Dockerfile
      target: development
    command: npm run start:dev email
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules
    restart: always

  scheduler:
    build:
      context: .
      dockerfile: ./apps/scheduler/Dockerfile
      target: development
    command: npm run start:dev scheduler
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules
    restart: always

  redis:
    image: 'redis'
    ports:
      - '6379:6379'

  rabbitmq:
    image: rabbitmq
    ports:
      - 5672:5672

  postgres:
    container_name: postgres
    image: postgres
    env_file:
      - .env
    environment:
      - PG_DATA=/var/lib/postgresql/data
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

volumes:
  pgdata:
